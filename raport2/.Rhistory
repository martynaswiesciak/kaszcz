install.packages('forecast')
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/przyklad-ts-airpass.R', echo=TRUE)
weatherAUS <- read.csv("~/Desktop/weatherAUS.csv")
View(weatherAUS)
ts(rainfall)
ts(weatherAUS$rainfall)
View(weatherAUS)
View(weatherAUS)
View(weatherAUS)
ts(weatherAUS$rainfall)
plot(ts(weatherAUS$Rainfall))
weatherAUS$id <- as.numeric(format(as.Date(weatherAUS$Date, format="%Y-%m-%d"),"%Y"))*12+as.numeric(format(as.Date(weatherAUS$Date, format="%Y-%m-%d"),"%m"))
t <- aggregate(weatherAUS$Rainfall, by = list(unique.values = weatherAUS$id), FUN = sum, na.rm=TRUE, na.action=NULL)
plot(ts(t$x))
source('~/.active-rstudio-document', echo=TRUE)
weatherAUS$Location
3000/12
weatherAUS$Location$Sydney
weatherAUS$Location[Sydney]
weatherAUS$Location['Sydney']
weatherAUS$Location.find('Sydney')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('tseries')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/przyklad-ts-airpass.R', echo=TRUE)
View(sydney)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/przyklad-ts-airpass.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/przyklad-ts-airpass.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
serie.all<-AirPassengers
dane.test<-window(serie.all,start=c(1959,1))
source('~/.active-rstudio-document', echo=TRUE)
AirPassengers
View(punjab)
View(punjab)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(X)
View(X)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/przyklad-ts-airpass.R', echo=TRUE)
plot(serie,main="Ilosc pasazerow",type="o")
abline(v=1949:1960,col=4,lty=3)
abline(v=1949:1960,col=4,lty=3)
plot(serie,main="Ilosc pasazerow",type="o")
abline(v=1949:1960,col=4,lty=3)
plot(serie, main='Opady w Bangladeszu', xlab='lata', ylab='opady [mm]')
abline(v=1960:1985, col=5, lty=2)
abline(v=1960:1985, col=5, lty=2)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/raport.R', echo=TRUE)
plot(serie, main='Opady w Bangladeszu', xlab='lata', ylab='opady [mm]')
dane.test <- window(serie.all,start=c(1985,1)) # dane do predykcji
abline(v=1960:1985, col=4, lty=3)
abline(v=1960:1985, col=5, lty=3)
dane.test <- window(serie.all,start=c(1985,1)) # dane do predykcji
abline(v=1960:1985, col=15, lty=3)
abline(v=1960:1985, col=20, lty=3)
abline(v=1960:1985, col=100, lty=3)
abline(v=1960:1985, col=50, lty=3)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/raport.R', echo=TRUE)
# AUTOKORELACJA
acf(serie,100, main = "Funkcja autokorelacji")
pacf(serie,100, main = "Funkcja częściowej autokorelacji")
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport 2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
abline(v=1960:1985, col=50, lty=3)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
boxplot(serie~floor(time(serie)), xlab = "Lata", ylab="Opady [mm]")
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
# Wykresy srednich rocznych i wariancji
plot(1960:1984, m, main="Średnia rocznie", xlab='lata', ylab= '')
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
acf(sqrtserie,100, main = "Funkcja autokorelacji")
pacf(sqrtserie,100, main = "Funkcja częściowej autokorelacji")
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
plot(sqrtm,sqrtv,xlab="Średnia roczna", ylab="Wariancja roczna")
boxplot(serie~floor(time(sqrtserie)), xlab = "Lata", ylab="Opady [mm]")
plot(1960:1984, sqrtm, main="Średnia rocznie", xlab='lata', ylab= '')
plot(1960:1984, sqrtm, main="Średnia rocznie", xlab='lata', ylab= '')
plot(1960:1984, sqrtv, main="Wariancja rocznie", xlab='lata', ylab='')
# DEKOMPOZYCJA
plot(decompose(serie))
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
plot(decompose(sqrtserie))
# DEKOMPOZYCJA
plot(decompose(serie))
plot(decompose(sqrtserie))
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
tsdisplay(serie)
tsdisplay(sqrtserie)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
pacf(sqrtserie.d12)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
pacf(sqrtserie.d12, ylim=c(-1,1), col=c(rep(1,11),2), lwd=1, lag.max=84, main="Częściowa autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12])
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
# MA(1) --> P=1, p=1
# AR(0) --> q = 0
acf(sqrtserie.d12, ylim=c(-1,1), col=c(2,rep(1,11)), lwd=1, lag.max=84, main="Autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12])
# MA(1) --> P=1, p=1
# AR(0) --> q = 0
acf(sqrtserie.d12, ylim=c(-1,1), col=c(2,rep(1,11)), lwd=1, lag.max=84, main=expression("Autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
# MA(1) --> P=1, p=1
# AR(0) --> q = 0
acf(sqrtserie.d12, ylim=c(-1,1), col=c(2,rep(1,11)), lwd=1, lag.max=84, main=expression("Autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
pacf(sqrtserie.d12, ylim=c(-1,1), col=c(rep(1,11),2), lwd=1, lag.max=84, main=expression("Częściowa autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
tsdisplay(sqrtserie.d12, main=expression("Szereg X'"[t]*" = X"[t]-"X"[t-12]))
tsdisplay(sqrtserie.d12.d12, main=expression("Szereg X''"[t]*" = X'"[t]-"X'"[t-12]))
tsdisplay(sqrtserie.d12.d12.d12, main=expression("Szereg X'''"[t]*" = X''"[t]-"X''"[t-12]))
tsdisplay(sqrtserie.d12, main=expression("Szereg X'"[t]*" = X"[t]-"X"[t-12]))
tsdisplay(sqrtserie.d12.d12, main=expression("Szereg X''"[t]*" = X'"[t]-"X'"[t-12]))
tsdisplay(sqrtserie.d12.d12.d12, main=expression("Szereg X'''"[t]*" = X''"[t]-"X''"[t-12]))
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
# PRAWDOPODOBNY MODEL
mod=arima(sqrtserie,order=c(0,0,1),seasonal=list(order=c(0,1,1),period=12))
summary(mod)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
mod.reszty<-mod$residuals
mod.reszty<-mod$residuals
plot(mod.reszty,type='o')
acf(mod.reszty,50)
acf(mod.reszty^2,50)
Box.test(mod.reszty,type="Ljung-Box",lag=2,fitdf=1)
plot(mod.reszty,type='o')
tsdiag(mod,gof.lag=24)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
tsdiag(arima.auto.bic,gof.lag=24)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
tsdiag(arima.auto,gof.lag=24)
validacion(mod,lnserie)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
# RESIDUA - ANALIZA
qqnorm(mod.reszty)
qqline(mod.reszty,col=2,lwd=2)
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
hist(mod.reszty,breaks=20,freq=F)
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
source('~/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/raport.R', echo=TRUE)
qqline(mod.reszty,col=2,lwd=2)
# RESIDUA - ANALIZA
qqnorm(mod.reszty)
qqline(mod.reszty,col=2,lwd=2)
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
hist(mod.reszty,breaks=20,freq=F)
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
hist(mod.reszty,breaks=20,freq=F, main='Histogram')
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
hist(mod.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='Gęstość')
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
qqnorm(arima.auto.bic.reszty)
qqline(arima.auto.bic.reszty,col=2,lwd=2)
hist(arima.auto.bic.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='Gęstość')
curve(dnorm(x,mean=mean(arima.auto.bic.reszty),sd=sd(arima.auto.bic.reszty)),col=2,add=T)
qqnorm(arima.auto.reszty)
qqline(arima.auto.reszty,col=2,lwd=2)
hist(arima.auto.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='Gęstość')
curve(dnorm(x,mean=mean(arima.auto.reszty),sd=sd(arima.auto.reszty)),col=2,add=T)
rm(list=ls())
graphics.off()
library(forecast)
library(tseries)
data <- read.csv('/Users/martynaswiesciak/Desktop/Studia/sem5/KASZCZ/kaszcz/raport2/bangladesz.csv')
serie.all <- ts(data$rain, start = c(1901, 1), end = c(2015, 12), frequency = 12)
start(serie.all)
# PODZIAĹ DANYCH NA PRĂ“BKÄ TESTOWÄ„ I DO PREDYKCJI
serie.all <- window(serie.all, start=c(1960, 1))
serie <- window(serie.all,end=c(1984,12)) # dane testowe
plot(serie, main='Opady w Bangladeszu', xlab='lata', ylab='opady [mm]')
abline(v=1960:1985, col=50, lty=3)
dane.test <- window(serie.all,start=c(1985,1)) # dane do predykcji
# acf i pacf
acf(serie,100, main = "Funkcja autokorelacji")
pacf(serie,100, main = "Funkcja czÄ™Ĺ›ciowej autokorelacji")
#badanie statystyk
m=apply(matrix(serie,nr=12),2,mean)
v=apply(matrix(serie,nr=12),2,var)
plot(m,v,xlab="Ĺšrednia roczna", ylab="Wariancja roczna")
abline(lm(v~m),col=6,lty=3,lwd=2)
summary(lm(v~m)) # statystyki liczbowe
# boxplot dla kaĹĽdego roku
boxplot(serie~floor(time(serie)), xlab = "Lata", ylab="Opady [mm]")
# Wykresy srednich rocznych i wariancji
plot(1960:1984, m, main="Ĺšrednia rocznie", xlab='lata', ylab= '')
plot(1960:1984, v, main="Wariancja rocznie", xlab='lata', ylab='')
# TRANSFORMACJA DANYCH - nakĹ‚adamy pierwiastek kwadratowy
sqrtserie <- sqrt(serie)
acf(sqrtserie,100, main = "Funkcja autokorelacji")
pacf(sqrtserie,100, main = "Funkcja czÄ™Ĺ›ciowej autokorelacji")
sqrtm=apply(matrix(sqrtserie,nr=12),2,mean)
sqrtv=apply(matrix(sqrtserie,nr=12),2,var)
plot(sqrtm,sqrtv,xlab="Ĺšrednia roczna", ylab="Wariancja roczna")
abline(lm(sqrtv~sqrtm),col=6,lty=3,lwd=2)
summary(lm(sqrtv~sqrtm)) # statystyki liczbowe
boxplot(serie~floor(time(sqrtserie)), xlab = "Lata", ylab="Opady [mm]")
plot(1960:1984, sqrtm, main="Ĺšrednia rocznie", xlab='lata', ylab= '')
plot(1960:1984, sqrtv, main="Wariancja rocznie", xlab='lata', ylab='')
# STACJONARNOĹšÄ†
adf.test(serie)
kpss.test(serie)
adf.test(sqrtserie)
kpss.test(sqrtserie)
# DEKOMPOZYCJA
plot(decompose(serie))
plot(decompose(sqrtserie))
par(mfrow=c(2,1))
monthplot(serie,main="Dane miesiÄ™cznie", ylab="")
monthplot(sqrtserie,main="Dane spierwiastkowane miesiÄ™cznie", ylab="")
# SEZONOWOĹšÄ†
sqrtserie.d12<-diff(sqrtserie,12)
tsdisplay(sqrtserie.d12, main=expression("Szereg X'"[t]*" = X"[t]-"X"[t-12]))
sqrtserie.d12.d12<-diff(sqrtserie.d12,12)
tsdisplay(sqrtserie.d12.d12, main=expression("Szereg X''"[t]*" = X'"[t]-"X'"[t-12]))
sqrtserie.d12.d12.d12<-diff(sqrtserie.d12.d12,12)
tsdisplay(sqrtserie.d12.d12.d12, main=expression("Szereg X'''"[t]*" = X''"[t]-"X''"[t-12]))
var(sqrtserie)
var(sqrtserie.d12)
var(sqrtserie.d12.d12)
var(sqrtserie.d12.d12.d12)
# MA(1) --> P=1, p=1
# AR(0) --> q = 0
acf(sqrtserie.d12, ylim=c(-1,1), col=c(2,rep(1,11)), lwd=1, lag.max=84, main=expression("Autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
pacf(sqrtserie.d12, ylim=c(-1,1), col=c(rep(1,11),2), lwd=1, lag.max=84, main=expression("CzÄ™Ĺ›ciowa autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
# PORĂ“WNANIE MODELI
mod=arima(sqrtserie,order=c(0,0,1),seasonal=list(order=c(0,1,1),period=12))
summary(mod)
arima.auto.bic<-auto.arima(sqrtserie, ic="bic")
summary(arima.auto.bic)
arima.auto<-auto.arima(sqrtserie, ic="aic")
summary(arima.auto)
# WALIDACJA MODELI
mod.reszty<-mod$residuals
plot(mod.reszty)
acf(mod.reszty,50)
pacf(mod.reszty,50)
acf(mod.reszty^2,50)
tsdiag(mod,gof.lag=24)
Box.test(mod.reszty,type="Ljung-Box",lag=2,fitdf=1)
arima.auto.bic.reszty<-arima.auto.bic$residuals
plot(arima.auto.bic.reszty)
acf(arima.auto.bic.reszty,50)
pacf(arima.auto.bic.reszty,50)
acf(arima.auto.bic.reszty^2,50)
tsdiag(arima.auto.bic,gof.lag=24)
Box.test(arima.auto.bic.reszty,type="Ljung-Box",lag=2,fitdf=1)
arima.auto.reszty<-arima.auto$residuals
plot(arima.auto.reszty)
acf(arima.auto.reszty,50)
pacf(arima.auto.reszty,50)
acf(arima.auto.reszty^2,50)
tsdiag(arima.auto,gof.lag=24)
Box.test(arima.auto.reszty,type="Ljung-Box",lag=2,fitdf=1)
# RESIDUA - ANALIZA
qqnorm(mod.reszty)
qqline(mod.reszty,col=2,lwd=2)
hist(mod.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
qqnorm(arima.auto.bic.reszty)
qqline(arima.auto.bic.reszty,col=2,lwd=2)
hist(arima.auto.bic.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(arima.auto.bic.reszty),sd=sd(arima.auto.bic.reszty)),col=2,add=T)
qqnorm(arima.auto.reszty)
qqline(arima.auto.reszty,col=2,lwd=2)
hist(arima.auto.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(arima.auto.reszty),sd=sd(arima.auto.reszty)),col=2,add=T)
data <- read.csv("D:/STUDIA/kaszcz/raport/kaszcz/raport2/bangladesz.csv")
View(data)
serie.all <- ts(data$rain, start = c(1901, 1), end = c(2015, 12), frequency = 12)
start(serie.all)
# PODZIAĹ DANYCH NA PRĂ“BKÄ TESTOWÄ„ I DO PREDYKCJI
serie.all <- window(serie.all, start=c(1960, 1))
serie <- window(serie.all,end=c(1984,12)) # dane testowe
plot(serie, main='Opady w Bangladeszu', xlab='lata', ylab='opady [mm]')
abline(v=1960:1985, col=50, lty=3)
dane.test <- window(serie.all,start=c(1985,1)) # dane do predykcji
# acf i pacf
acf(serie,100, main = "Funkcja autokorelacji")
pacf(serie,100, main = "Funkcja czÄ™Ĺ›ciowej autokorelacji")
#badanie statystyk
m=apply(matrix(serie,nr=12),2,mean)
v=apply(matrix(serie,nr=12),2,var)
plot(m,v,xlab="Ĺšrednia roczna", ylab="Wariancja roczna")
abline(lm(v~m),col=6,lty=3,lwd=2)
summary(lm(v~m)) # statystyki liczbowe
# boxplot dla kaĹĽdego roku
boxplot(serie~floor(time(serie)), xlab = "Lata", ylab="Opady [mm]")
# Wykresy srednich rocznych i wariancji
plot(1960:1984, m, main="Ĺšrednia rocznie", xlab='lata', ylab= '')
plot(1960:1984, v, main="Wariancja rocznie", xlab='lata', ylab='')
# TRANSFORMACJA DANYCH - nakĹ‚adamy pierwiastek kwadratowy
sqrtserie <- sqrt(serie)
acf(sqrtserie,100, main = "Funkcja autokorelacji")
pacf(sqrtserie,100, main = "Funkcja czÄ™Ĺ›ciowej autokorelacji")
sqrtm=apply(matrix(sqrtserie,nr=12),2,mean)
sqrtv=apply(matrix(sqrtserie,nr=12),2,var)
plot(sqrtm,sqrtv,xlab="Ĺšrednia roczna", ylab="Wariancja roczna")
abline(lm(sqrtv~sqrtm),col=6,lty=3,lwd=2)
summary(lm(sqrtv~sqrtm)) # statystyki liczbowe
boxplot(serie~floor(time(sqrtserie)), xlab = "Lata", ylab="Opady [mm]")
plot(1960:1984, sqrtm, main="Ĺšrednia rocznie", xlab='lata', ylab= '')
plot(1960:1984, sqrtv, main="Wariancja rocznie", xlab='lata', ylab='')
# STACJONARNOĹšÄ†
adf.test(serie)
kpss.test(serie)
adf.test(sqrtserie)
kpss.test(sqrtserie)
# DEKOMPOZYCJA
plot(decompose(serie))
plot(decompose(sqrtserie))
par(mfrow=c(2,1))
monthplot(serie,main="Dane miesiÄ™cznie", ylab="")
monthplot(sqrtserie,main="Dane spierwiastkowane miesiÄ™cznie", ylab="")
# SEZONOWOĹšÄ†
sqrtserie.d12<-diff(sqrtserie,12)
tsdisplay(sqrtserie.d12, main=expression("Szereg X'"[t]*" = X"[t]-"X"[t-12]))
sqrtserie.d12.d12<-diff(sqrtserie.d12,12)
tsdisplay(sqrtserie.d12.d12, main=expression("Szereg X''"[t]*" = X'"[t]-"X'"[t-12]))
sqrtserie.d12.d12.d12<-diff(sqrtserie.d12.d12,12)
tsdisplay(sqrtserie.d12.d12.d12, main=expression("Szereg X'''"[t]*" = X''"[t]-"X''"[t-12]))
var(sqrtserie)
var(sqrtserie.d12)
var(sqrtserie.d12.d12)
var(sqrtserie.d12.d12.d12)
# MA(1) --> P=1, p=1
# AR(0) --> q = 0
acf(sqrtserie.d12, ylim=c(-1,1), col=c(2,rep(1,11)), lwd=1, lag.max=84, main=expression("Autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
pacf(sqrtserie.d12, ylim=c(-1,1), col=c(rep(1,11),2), lwd=1, lag.max=84, main=expression("CzÄ™Ĺ›ciowa autokowariancja szeregu X'"[t]*" = X"[t]-"X"[t-12]))
# PORĂ“WNANIE MODELI
mod=arima(sqrtserie,order=c(0,0,1),seasonal=list(order=c(0,1,1),period=12))
summary(mod)
arima.auto.bic<-auto.arima(sqrtserie, ic="bic")
summary(arima.auto.bic)
arima.auto<-auto.arima(sqrtserie, ic="aic")
summary(arima.auto)
# WALIDACJA MODELI
mod.reszty<-mod$residuals
plot(mod.reszty)
acf(mod.reszty,50)
pacf(mod.reszty,50)
acf(mod.reszty^2,50)
tsdiag(mod,gof.lag=24)
Box.test(mod.reszty,type="Ljung-Box",lag=2,fitdf=1)
arima.auto.bic.reszty<-arima.auto.bic$residuals
plot(arima.auto.bic.reszty)
acf(arima.auto.bic.reszty,50)
pacf(arima.auto.bic.reszty,50)
acf(arima.auto.bic.reszty^2,50)
tsdiag(arima.auto.bic,gof.lag=24)
Box.test(arima.auto.bic.reszty,type="Ljung-Box",lag=2,fitdf=1)
arima.auto.reszty<-arima.auto$residuals
plot(arima.auto.reszty)
acf(arima.auto.reszty,50)
pacf(arima.auto.reszty,50)
acf(arima.auto.reszty^2,50)
tsdiag(arima.auto,gof.lag=24)
Box.test(arima.auto.reszty,type="Ljung-Box",lag=2,fitdf=1)
# RESIDUA - ANALIZA
qqnorm(mod.reszty)
qqline(mod.reszty,col=2,lwd=2)
hist(mod.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(mod.reszty),sd=sd(mod.reszty)),col=2,add=T)
qqnorm(arima.auto.bic.reszty)
qqline(arima.auto.bic.reszty,col=2,lwd=2)
hist(arima.auto.bic.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(arima.auto.bic.reszty),sd=sd(arima.auto.bic.reszty)),col=2,add=T)
qqnorm(arima.auto.reszty)
qqline(arima.auto.reszty,col=2,lwd=2)
hist(arima.auto.reszty,breaks=20,freq=F, main='Histogram', xlab='', ylab='GÄ™stoĹ›Ä‡')
curve(dnorm(x,mean=mean(arima.auto.reszty),sd=sd(arima.auto.reszty)),col=2,add=T)
# PREDYKCJA
# PREDYKCJA
# PREDYKCJA
# PREDYKCJA
# PREDYKCJA
# PREDYKCJA
# PREDYKCJA
par(mfrow=c(1,1))
prognozy.mod3<-forecast(mod,h=24)
plot(prognozy.mod3,main="model 3")
lines(log(dane.test), col="red")
# lines(lnserie,col='red')
accuracy(prognozy.mod3)
accuracy(prognozy.mod3,log(dane.test))
ultim=c(1958,12)
pred=predict(mod,n.ahead=24)
pr<-ts(c(tail(lnserie,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu1<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr1<-ts(exp(pr),start=ultim,freq=12)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
abline(v=1949+0:13,lty=3,col=4)
lines(serie.all)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
pr<-ts(c(tail(lnserie,1),pred$pred),start=ultim,freq=12)
# Logarithmic transformation in order to deal with non constant varaince
lnserie=log(serie)
ultim=c(1958,12)
pred=predict(mod,n.ahead=24)
pr<-ts(c(tail(lnserie,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu1<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr1<-ts(exp(pr),start=ultim,freq=12)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
abline(v=1949+0:13,lty=3,col=4)
lines(serie.all)
serie.all<-AirPassengers
start(serie.all)
end(serie.all)
serie<-window(serie.all,end=c(1958,12))
# Logarithmic transformation in order to deal with non constant varaince
lnserie=log(serie)
ultim=c(1958,12)
pred=predict(mod,n.ahead=24)
pr<-ts(c(tail(lnserie,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu1<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr1<-ts(exp(pr),start=ultim,freq=12)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
abline(v=1949+0:13,lty=3,col=4)
par(mfrow=c(1,1))
prognozy.mod3<-forecast(mod,h=24)
plot(prognozy.mod3,main="model 3")
lines(log(dane.test), col="red")
dane.test<-window(serie.all,start=c(1959,1))
prognozy.mod3<-forecast(mod,h=24)
plot(prognozy.mod3,main="model 3")
lines(log(dane.test), col="red")
# lines(lnserie,col='red')
accuracy(prognozy.mod3)
accuracy(prognozy.mod3,log(dane.test))
plot(prognozy.mod3,main="model 3")
lines(log(dane.test), col="red")
ultim=c(1958,12)
pred=predict(mod,n.ahead=24)
pr<-ts(c(tail(lnserie,1),pred$pred),start=ultim,freq=12)
se<-ts(c(0,pred$se),start=ultim,freq=12)
#Intervals
tl1<-ts(exp(pr-1.96*se),start=ultim,freq=12)
tu1<-ts(exp(pr+1.96*se),start=ultim,freq=12)
pr1<-ts(exp(pr),start=ultim,freq=12)
ts.plot(serie,tl1,tu1,pr1,lty=c(1,2,2,1),col=c(1,4,4,2),type="o",main="Model 1 ")
abline(v=1949+0:13,lty=3,col=4)
